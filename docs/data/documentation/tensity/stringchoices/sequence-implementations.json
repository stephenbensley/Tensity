{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/Sequence-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Tensity"
      }
    ],
    "role" : "collectionGroup",
    "title" : "Sequence Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/lazy",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/publisher",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/underestimatedCount-3icnu"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/allSatisfy(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/compactMap(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/compare(_:_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/contains(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/contains(where:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/elementsEqual(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/elementsEqual(_:by:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/enumerated()",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/filter(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/first(where:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/flatMap(_:)-68xhn",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/flatMap(_:)-9o3m7",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/forEach(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/formatted(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/lexicographicallyPrecedes(_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/lexicographicallyPrecedes(_:by:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/map(_:)-20pr",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/max()",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/max(by:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/min()",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/min(by:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/reduce(_:_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/reduce(into:_:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/shuffled()",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/shuffled(using:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted()",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted(by:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted(using:)-7rfed",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted(using:)-9kr2x",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/starts(with:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/starts(with:by:)",
        "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/withContiguousStorageIfAvailable(_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/tensity\/stringchoices\/sequence-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.stephenbensley.Tensity/documentation/Tensity": {
  "abstract" : [
    {
      "text" : "Tensity is an iOS app that calculates the string tension for a guitar.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Tensity",
  "type" : "topic",
  "url" : "\/documentation\/tensity"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices": {
  "abstract" : [
    {
      "text" : "The set of strings from which the user can choose.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StringChoices"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StringChoices"
    }
  ],
  "role" : "symbol",
  "title" : "StringChoices",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/allSatisfy(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allSatisfy"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/allSatisfy(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allSatisfy(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/allsatisfy(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/compactMap(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "compactMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "ElementOfResult"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ElementOfResult"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ElementOfResult"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/compactMap(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "compactMap(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/compactmap(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/compare(_:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "compare"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Comparator"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Comparator"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Compared"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Comparator"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Compared"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@E@NSComparisonResult",
      "text" : "ComparisonResult"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/compare(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "compare(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/compare(_:_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/contains(_:)": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Equatable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contains"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/contains(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contains(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/contains(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/contains(where:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contains"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "where"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/contains(where:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contains(where:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/contains(where:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/elementsEqual(_:)": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Equatable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "elementsEqual"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/elementsEqual(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "elementsEqual(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/elementsequal(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/elementsEqual(_:by:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "elementsEqual"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/elementsEqual(_:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "elementsEqual(_:by:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/elementsequal(_:by:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/enumerated()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "enumerated"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s18EnumeratedSequenceV",
      "text" : "EnumeratedSequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/enumerated()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "enumerated()",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/enumerated()"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/filter(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/filter(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filter(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/filter(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/first(where:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "first"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "where"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/first(where:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "first(where:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/first(where:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/flatMap(_:)-68xhn": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "flatMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "ElementOfResult"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ElementOfResult"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ElementOfResult"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/flatMap(_:)-68xhn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "flatMap(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/flatmap(_:)-68xhn"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/flatMap(_:)-9o3m7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "flatMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "SegmentOfResult"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "SegmentOfResult"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "SegmentOfResult"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/flatMap(_:)-9o3m7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "flatMap(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/flatmap(_:)-9o3m7"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/forEach(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "forEach"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/forEach(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "forEach(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/foreach(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/formatted(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formatted"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "FormatOutput"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/formatted(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formatted(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/formatted(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/lazy": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lazy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12LazySequenceV",
      "text" : "LazySequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/lazy",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "lazy",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/lazy"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/lexicographicallyPrecedes(_:)": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Comparable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lexicographicallyPrecedes"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/lexicographicallyPrecedes(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "lexicographicallyPrecedes(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/lexicographicallyprecedes(_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/lexicographicallyPrecedes(_:by:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lexicographicallyPrecedes"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "OtherSequence"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/lexicographicallyPrecedes(_:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "lexicographicallyPrecedes(_:by:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/lexicographicallyprecedes(_:by:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/map(_:)-20pr": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/map(_:)-20pr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "map(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/map(_:)-20pr"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/max()": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Comparable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "max"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/max()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "max()",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/max()"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/max(by:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "max"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/max(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "max(by:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/max(by:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/min()": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Comparable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "min"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/min()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "min()",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/min()"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/min(by:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "min"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/min(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "min(by:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/min(by:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/publisher": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "publisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine10PublishersO",
      "text" : "Publishers"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine10PublishersO8SequenceV",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/publisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "publisher",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/publisher"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/reduce(_:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reduce"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/reduce(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reduce(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/reduce(_:_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/reduce(into:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reduce"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "into"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ()) "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Result"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/reduce(into:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reduce(into:_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/reduce(into:_:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/shuffled()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shuffled"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/shuffled()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shuffled()",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/shuffled()"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/shuffled(using:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shuffled"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/shuffled(using:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shuffled(using:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/shuffled(using:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/sorted()": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Comparable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sorted()",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/sorted()"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/sorted(by:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sorted(by:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/sorted(by:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/sorted(using:)-7rfed": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Comparator"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted(using:)-7rfed",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sorted(using:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/sorted(using:)-7rfed"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/sorted(using:)-9kr2x": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Comparator"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Comparator"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/sorted(using:)-9kr2x",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sorted(using:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/sorted(using:)-9kr2x"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/starts(with:)": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Equatable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "starts"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "PossiblePrefix"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PossiblePrefix"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/starts(with:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "starts(with:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/starts(with:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/starts(with:by:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "starts"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "PossiblePrefix"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PossiblePrefix"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PossiblePrefix"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/starts(with:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "starts(with:by:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/starts(with:by:)"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/underestimatedCount-3icnu": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "underestimatedCount"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/underestimatedCount-3icnu",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "underestimatedCount",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/underestimatedcount-3icnu"
},
"doc://com.stephenbensley.Tensity/documentation/Tensity/StringChoices/withContiguousStorageIfAvailable(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withContiguousStorageIfAvailable"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SR",
      "text" : "UnsafeBufferPointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.stephenbensley.Tensity\/documentation\/Tensity\/StringChoices\/withContiguousStorageIfAvailable(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withContiguousStorageIfAvailable(_:)",
  "type" : "topic",
  "url" : "\/documentation\/tensity\/stringchoices\/withcontiguousstorageifavailable(_:)"
}
}
}